Ciudadano de primera clase
Son argumentos, variables y retorno de otras funciones

Funciones con nombre tienen comportamiento hoisting

Funciones como argumento para otras funciones
	function multiplicar(x, y)
	{
    		return x * y;
	}

	function calcular(operacion, op1, op2)
	{	
		return operacion(op1, op2);
	}

	console.log(calcular(multiplicar, 5, 7));


Funciones anònimas
Enviar la declaraciòn de la funciòn, no tiene nombre
console.log(calcular(function(r, s){return r / s}, 5, 7));

	
Funciones flecha
console.log(calcular((r, s)=>{return r / s}, 5, 7));


Funciones de retrollamada (callback)
function calcular2(a, b, callback)
{
    return callback(a, b);
}

//			funciòn(arg1, arg2, funciòn flecha)
console.log(calcular2(7, 3, (a,b) => {return a * b}));











#373234 Dark Granite
#E8DCCC Sandstone
#F3ECE4 Pale Cream
#D84339 Brick Red







function sumar(x,y)
{
    return x + y;
}

function restar(x, y)
{
    return x - y;
}

function multiplicar(x, y)
{
    return x * y;
}

function saludar()
{
    console.log("hola");
}

function saludar2(n)
{
    console.log("Hola " + n);
    console.log(`Hola ${n}, còmo estàs`);
}

console.log(sumar(3, 4));
console.log(restar(3, 4));
saludar();
saludar2("tilin");

function calcular(operacion, op1, op2)
{
    // console.log("Operando 1 = " + op1);
    // console.log("Operando 2 = " + op2);
    // console.log("Operaciòn = " + operacion);
    // console.log(operacion(op1, op2));
    return operacion(op1, op2);
}

console.log(calcular(function(r, s){return r / s}, 5, 7));
console.log(calcular((r, s)=>{return r / s}, 5, 7));

/*
 Redeclaramos la funciòn calcular para mejor pràctica
 y estar en acorde al estilo de programaciòn de la industria
*/

function calcular2(a, b, callback)
{
    return callback(a, b);
}

console.log(calcular2(7, 3, (a,b) => {return a * b}));
console.log(calcular2(7, 3, (a,b) => {return a / b}));

function calcular_iva(monto, iva, callback)
{
    return callback(monto, iva);
}

const extranjero = .21;
const nacional = .16;
console.log(calcular_iva(777, extranjero, (monto, iva) => {return monto + (monto * iva)}));
console.log(calcular_iva(777, extranjero, (monto, iva) => {return monto + (monto * iva)}));










function menu()
{
  console.log("***** KIOSKO FES ARAGÓN *****");
  console.log("(1) Papas Fritas..........$17");
  console.log("(2) Vaso de frutas........$25");
  console.log("(3) Jugo de Naranja.......$30");
  console.log("(4) Agua de Jamaica.......$15");
  console.log("(5) Torta de Jamón........$25");

  console.log("Modo de uso: código del producto, cantidad. Escribir 'fin' para concluir el proceso"); 
}

menu();


function despachar(precio, cantidad, callback)
{
  return callback(precio, cantidad)
}

console.log(despachar)









************************29/08/2025************************


estructuras de control
	Secuencia	ejecuciòn ordenada de instrucciones, arquitectura Von Neuman
	Selecciòn	toma decisiones para ejecutar distintas instrucciones
			Condicional simple	if(edad > 18){algo}
			Condicional con Bifurcaciòn if(edad > 18){algo} else{otrs cosa}
			Selecciòn mùltiple
	Iteraciòn	ejecutar còdigo varias veces. Mientras se cumpla una condiciòn (while, do-while) o un nùmero especìfico de veces (for)












let edad = 19;
if (edad >= 18){
    console.log("Eres mayor de edad");
}
console.log("Fin del programa");

console.log("if-else");
if (edad >= 18){
    console.log("Eres mayor de edad");
} else {
    console.log("No puedes entrar al antro");

}

console.log("if anidado");
let edadd = 20;
let ine = true;
if (edadd >= 18){
    if(ine) {
        console.log("bienveniddo el mundo del sida");
    }
    else {
        console.log("No puedes entrar");
    }
} else {
    console.log("Eres menor de edad");
}
console.log("Fin");

let dia = "sabado";
switch(dia)
{
    case 'lunes':
        console.log("Inicio de semana");
        break;
    case 'martes':
        console.log("Segundo Lunes");
        break;
    case 'miercoles':
        console.log("Ombligo de la semana");
        break;
    case 'jueves':
        console.log("Pre viernes");
        break;
    case 'viernes':
        console.log("Hoy toca y el cuerpo lo sabe!!!");
        break;
    default:
        console.log("A descansar");
}

console.log("FOR");
for (let i = 0; i < 5; i++)
{
    console.log("Hola " + i);
}

let contenedor = document.getElementById("contenedor");
for (let i = 0; i < 5; i++)
{
    let parrafo = document.createElement("div");
    parrafo.className = "col-3";
    parrafo.innerHTML = "peligro";
    contenedor.appendChild(parrafo);
}





HTML


<div class="container">
  <div id="contenedor">
  </div>
</div>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-sRIl4kxILFvY47J16cr9ZwB07vP4J8+LH7qKQnuqkuIAvNWLzeN8tE5YBujZqJLB" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js" integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI" crossorigin="anonymous"></script>



























function firstDayOfWeek(week, year) { 
    
    if (typeof year !== 'undefined') {
        year = (new Date()).getFullYear();
    }

    var date       = firstWeekOfYear(year),
        weekTime   = weeksToMilliseconds(week),
        targetTime = date.getTime() + weekTime;
    
    return date.setTime(targetTime); 
    
}

function weeksToMilliseconds(weeks) {
    return 1000 * 60 * 60 * 24 * 7 * (weeks - 1);
}

function firstWeekOfYear(year) {
    var date = new Date();
    date = firstDayOfYear(date,year);
    date = firstWeekday(date);
    return date;
}

function firstDayOfYear(date, year) {
    date.setYear(year);
    date.setDate(1);
    date.setMonth(0);
    date.setHours(0);
    date.setMinutes(0);
    date.setSeconds(0);
    date.setMilliseconds(0);
    return date;
}

/**
 * Sets the given date as the first day of week of the first week of year.
 */
function firstWeekday(firstOfJanuaryDate) {
	// 0 correspond au dimanche et 6 correspond au samedi.
	var FIRST_DAY_OF_WEEK = 1; // Monday, according to iso8601
	var WEEK_LENGTH = 7; // 7 days per week
    var day = firstOfJanuaryDate.getDay();
    day = (day === 0) ? 7 : day; // make the days monday-sunday equals to 1-7 instead of 0-6
	var dayOffset=-day+FIRST_DAY_OF_WEEK; // dayOffset will correct the date in order to get a Monday
	if (WEEK_LENGTH-day+1<4) {
		// the current week has not the minimum 4 days required by iso 8601 => add one week
		dayOffset += WEEK_LENGTH;
	}
    return new Date(firstOfJanuaryDate.getTime()+dayOffset*24*60*60*1000);
}

function assertDateEquals(effectiveDate, expectedDate, description) {
	if ((effectiveDate==null ^ expectedDate==null) || effectiveDate.getTime()!=expectedDate.getTime()) {
		console.log("assert failed: "+description+"; effective="+effectiveDate+", expected="+expectedDate);
	}
}
function assertEquals(effectiveValue, expectedValue, description) {
	if (effectiveValue!=expectedValue) {
		console.log("assert failed: "+description+"; effective="+effectiveValue+", expected="+expectedValue);
	}
}

// expect the first day of year to be a monday
for (var i=1970; i<2050; i++) {
	assertEquals(firstWeekOfYear(i).getDay(), 1, "first day of year "+i+" must be a monday"); // 1=Monday
}

// assert some future first day of first week of year; source: http://www.epochconverter.com/date-and-time/weeknumbers-by-year.php
assertDateEquals(firstWeekOfYear(2013), new Date(Date.parse("Dec 31, 2012")), "2013");
assertDateEquals(firstWeekOfYear(2014), new Date(Date.parse("Dec 30, 2013")), "2014");
assertDateEquals(firstWeekOfYear(2015), new Date(Date.parse("Dec 29, 2014")), "2015");
assertDateEquals(firstWeekOfYear(2016), new Date(Date.parse("Jan 4, 2016")), "2016");
assertDateEquals(firstWeekOfYear(2017), new Date(Date.parse("Jan 2, 2017")), "2017");
assertDateEquals(firstWeekOfYear(2018), new Date(Date.parse("Jan 1, 2018")), "2018");
assertDateEquals(firstWeekOfYear(2019), new Date(Date.parse("Dec 31, 2018")), "2019");
assertDateEquals(firstWeekOfYear(2020), new Date(Date.parse("Dec 30, 2019")), "2020");
assertDateEquals(firstWeekOfYear(2021), new Date(Date.parse("Jan 4, 2021")), "2021");
assertDateEquals(firstWeekOfYear(2022), new Date(Date.parse("Jan 3, 2022")), "2022");
assertDateEquals(firstWeekOfYear(2023), new Date(Date.parse("Jan 2, 2023")), "2023");
assertDateEquals(firstWeekOfYear(2024), new Date(Date.parse("Jan 1, 2024")), "2024");
assertDateEquals(firstWeekOfYear(2025), new Date(Date.parse("Dec 30, 2024")), "2025");
assertDateEquals(firstWeekOfYear(2026), new Date(Date.parse("Dec 29, 2025")), "2026");

console.log("All assertions done.");







************************************************************************01/09/2025************************************************************************


HTML

<DIV  class="container" id="principal">
  <h2>TITULO</h2>
  <DIV class="row" id="base">
  </DIV>
</DIV>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-sRIl4kxILFvY47J16cr9ZwB07vP4J8+LH7qKQnuqkuIAvNWLzeN8tE5YBujZqJLB" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js" integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI" crossorigin="anonymous"></script>


JS

let base = document.getElementById("base");
const colores = ["primary", "secondary", "info"];
const colores_boton = ["success", "danger", "warning"];
const colores_boton2 = ["dark", "secondary"];

for(let i = 0; i < 8; i++)
{
  let tarjeta = document.createElement("DIV");
  tarjeta.className = "card col-3 m-1 mb-1";
  tarjeta.innerHTML= `
      <div class="card-body">
      <h5 class="card-title bg-${colores[i % 3]}">Titulo${i}</h5>
      <p class="card-text bg-${colores_boton[i % 3]}">Contenido</p>
      <a href="#" class="btn btn-${colores_boton2[i % 2]}">Ir</a>
    </div>`;
  base.appendChild(tarjeta)

}


OPERADOR TERNARIO
b = c > 5?hacer esto si es verdadero:si es falso hacer esto;
<h5 class="card-title bg-${i % 3 == 0?"primary": i % 3 == 1?"success":"danger"}">Titulo</h5>




ARREGLOS
const colores = ["azul", "rojo", "verde"];
console.log(colores[3]);
colores[3] = "amarillo";
console.log(colores);
colores[4] = "fucsia";
console.log(colores);
for (let i = 0; i < colores.length; i++)
{
  // console.log(colores[i]);
  for (let j = 0; j < colores[i].length; j++)
  {
    console.log(colores[i][j]);
  }
}






